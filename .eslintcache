[{"C:\\incubator\\social\\src\\components\\profile\\ProfileContainer.tsx":"1","C:\\incubator\\social\\src\\HOC\\AuthRedirect.tsx":"2","C:\\incubator\\social\\src\\components\\dialogs\\DialogsContainer.tsx":"3","C:\\incubator\\social\\src\\components\\users\\UsersContainer.tsx":"4","C:\\incubator\\social\\src\\App.tsx":"5","C:\\incubator\\social\\src\\Redux\\AuthReducer.tsx":"6","C:\\incubator\\social\\src\\Redux\\ProfileReducer.tsx":"7","C:\\incubator\\social\\src\\Redux\\UsersReducer.tsx":"8","C:\\incubator\\social\\src\\Redux\\DialogsReducer.tsx":"9","C:\\incubator\\social\\src\\components\\dialogs\\Dialogs.tsx":"10","C:\\incubator\\social\\src\\components\\profile\\profileInfo\\ProfileInfo.tsx":"11","C:\\incubator\\social\\src\\components\\profile\\profileInfo\\ProfileStatus.tsx":"12","C:\\incubator\\social\\src\\API\\API.tsx":"13","C:\\incubator\\social\\src\\Redux\\SidebarReducer.tsx":"14","C:\\incubator\\social\\src\\components\\login\\Login.tsx":"15","C:\\incubator\\social\\src\\Redux\\ReduxStore.tsx":"16","C:\\incubator\\social\\src\\components\\header\\Header.tsx":"17","C:\\incubator\\social\\src\\components\\profile\\myposts\\post\\Post.tsx":"18","C:\\incubator\\social\\src\\components\\profile\\myposts\\MyPosts.tsx":"19","C:\\incubator\\social\\src\\components\\profile\\myposts\\MyPostsContainer.tsx":"20","C:\\incubator\\social\\src\\utils\\validators\\validators.tsx":"21","C:\\incubator\\social\\src\\components\\common\\preloader\\Preloader.tsx":"22","C:\\incubator\\social\\src\\components\\common\\FormControls\\FormControls.tsx":"23","C:\\incubator\\social\\src\\components\\header\\HeaderContainer.tsx":"24"},{"size":2030,"mtime":1634247393641,"results":"25","hashOfConfig":"26"},{"size":854,"mtime":1626192071573,"results":"27","hashOfConfig":"26"},{"size":903,"mtime":1628616977394,"results":"28","hashOfConfig":"26"},{"size":3011,"mtime":1626192819425,"results":"29","hashOfConfig":"26"},{"size":1604,"mtime":1626190179910,"results":"30","hashOfConfig":"26"},{"size":1946,"mtime":1634245439391,"results":"31","hashOfConfig":"26"},{"size":2774,"mtime":1628623243107,"results":"32","hashOfConfig":"26"},{"size":5624,"mtime":1626106103565,"results":"33","hashOfConfig":"26"},{"size":1127,"mtime":1628617916336,"results":"34","hashOfConfig":"26"},{"size":2146,"mtime":1634162369626,"results":"35","hashOfConfig":"26"},{"size":892,"mtime":1634219615497,"results":"36","hashOfConfig":"26"},{"size":1620,"mtime":1628547487957,"results":"37","hashOfConfig":"26"},{"size":1343,"mtime":1634213933896,"results":"38","hashOfConfig":"26"},{"size":199,"mtime":1616158354616,"results":"39","hashOfConfig":"26"},{"size":2026,"mtime":1634245722343,"results":"40","hashOfConfig":"26"},{"size":811,"mtime":1628601410771,"results":"41","hashOfConfig":"26"},{"size":642,"mtime":1634222001988,"results":"42","hashOfConfig":"26"},{"size":540,"mtime":1616152641369,"results":"43","hashOfConfig":"26"},{"size":1781,"mtime":1634164515072,"results":"44","hashOfConfig":"26"},{"size":728,"mtime":1628621617212,"results":"45","hashOfConfig":"26"},{"size":319,"mtime":1634162591440,"results":"46","hashOfConfig":"26"},{"size":196,"mtime":1622714878763,"results":"47","hashOfConfig":"26"},{"size":803,"mtime":1634164448876,"results":"48","hashOfConfig":"26"},{"size":639,"mtime":1634221143223,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rl23lm",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"85"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\incubator\\social\\src\\components\\profile\\ProfileContainer.tsx",[],"C:\\incubator\\social\\src\\HOC\\AuthRedirect.tsx",[],"C:\\incubator\\social\\src\\components\\dialogs\\DialogsContainer.tsx",[],"C:\\incubator\\social\\src\\components\\users\\UsersContainer.tsx",["102"],"C:\\incubator\\social\\src\\App.tsx",["103","104"],"C:\\incubator\\social\\src\\Redux\\AuthReducer.tsx",["105"],"C:\\incubator\\social\\src\\Redux\\ProfileReducer.tsx",[],"C:\\incubator\\social\\src\\Redux\\UsersReducer.tsx",["106"],"import {usersAPI} from \"../API/API\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./ReduxStore\";\r\n\r\nexport const FOLLOW = \"FOLLOW\"\r\nexport const UNFOLLOW = \"UNFOLLOW\"\r\nexport const SET_USERS = \"SET_USERS\"\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nexport const SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nexport const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: {\r\n        small: null | string\r\n        large: null | string\r\n    },\r\n    status: null | string\r\n    followed: boolean\r\n}\r\n\r\ntype InitialType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: Array<number>\r\n}\r\n\r\nlet initialState: InitialType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 4,\r\n    isFetching: true,\r\n    followingProgress: []\r\n}\r\n\r\nexport const UsersReducer = (state = initialState, action: usersActionTypes): InitialType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingProgress: action.value\r\n                    ? [...state.followingProgress, action.userID]\r\n                    : state.followingProgress.filter(id => id != action.userID)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userID: number) => ({type: FOLLOW, userID} as const)\r\nexport const unfollowSuccess = (userID: number) => ({type: UNFOLLOW, userID} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const toggleIsFollowingProgress = (value: boolean, userID: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    value, userID\r\n} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n            dispatch(toggleIsFetching(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, usersActionTypes>) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n\r\n            })\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, usersActionTypes>) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n\r\n            })\r\n    }\r\n}\r\n\r\ntype  followActionType = ReturnType<typeof followSuccess>\r\ntype  unfollowActionType = ReturnType<typeof unfollowSuccess>\r\ntype  setUsersActionType = ReturnType<typeof setUsers>\r\ntype setCurrentPageActionType = ReturnType<typeof setCurrentPage>\r\ntype setTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\r\ntype toggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>\r\ntype toggleIsFollowingProgressActionType = ReturnType<typeof toggleIsFollowingProgress>\r\n\r\n\r\ntype usersActionTypes =\r\n    followActionType\r\n    | unfollowActionType\r\n    | setUsersActionType\r\n    | setCurrentPageActionType\r\n    | setTotalUsersCountActionType\r\n    | toggleIsFetchingActionType\r\n    | toggleIsFollowingProgressActionType","C:\\incubator\\social\\src\\Redux\\DialogsReducer.tsx",[],"C:\\incubator\\social\\src\\components\\dialogs\\Dialogs.tsx",[],"C:\\incubator\\social\\src\\components\\profile\\profileInfo\\ProfileInfo.tsx",["107"],"C:\\incubator\\social\\src\\components\\profile\\profileInfo\\ProfileStatus.tsx",["108"],"C:\\incubator\\social\\src\\API\\API.tsx",[],"C:\\incubator\\social\\src\\Redux\\SidebarReducer.tsx",["109"],"import React from \"react\";\r\nimport {ActionPropsType} from \"./Store\";\r\n\r\nlet initialState={}\r\n\r\nexport const SidebarReducer=(state: any=initialState, action: ActionPropsType) => {\r\n    return state\r\n}",["110","111"],"C:\\incubator\\social\\src\\components\\login\\Login.tsx",[],"C:\\incubator\\social\\src\\Redux\\ReduxStore.tsx",[],["112","113"],"C:\\incubator\\social\\src\\components\\header\\Header.tsx",["114"],"C:\\incubator\\social\\src\\components\\profile\\myposts\\post\\Post.tsx",["115"],"C:\\incubator\\social\\src\\components\\profile\\myposts\\MyPosts.tsx",["116"],"C:\\incubator\\social\\src\\components\\profile\\myposts\\MyPostsContainer.tsx",["117"],"C:\\incubator\\social\\src\\utils\\validators\\validators.tsx",["118"],"C:\\incubator\\social\\src\\components\\common\\preloader\\Preloader.tsx",["119"],"C:\\incubator\\social\\src\\components\\common\\FormControls\\FormControls.tsx",[],"C:\\incubator\\social\\src\\components\\header\\HeaderContainer.tsx",[],{"ruleId":"120","severity":1,"message":"121","line":26,"column":6,"nodeType":"122","messageId":"123","endLine":26,"endColumn":28},{"ruleId":"120","severity":1,"message":"124","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"120","severity":1,"message":"125","line":5,"column":8,"nodeType":"122","messageId":"123","endLine":5,"endColumn":15},{"ruleId":"120","severity":1,"message":"126","line":1,"column":9,"nodeType":"122","messageId":"123","endLine":1,"endColumn":13},{"ruleId":"127","severity":1,"message":"128","line":91,"column":63,"nodeType":"129","messageId":"130","endLine":91,"endColumn":65},{"ruleId":"131","severity":1,"message":"132","line":21,"column":17,"nodeType":"133","endLine":21,"endColumn":56},{"ruleId":"120","severity":1,"message":"134","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":15},{"ruleId":"120","severity":1,"message":"135","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":13},{"ruleId":"136","replacedBy":"137"},{"ruleId":"138","replacedBy":"139"},{"ruleId":"136","replacedBy":"140"},{"ruleId":"138","replacedBy":"141"},{"ruleId":"120","severity":1,"message":"142","line":4,"column":9,"nodeType":"122","messageId":"123","endLine":4,"endColumn":17},{"ruleId":"131","severity":1,"message":"132","line":11,"column":17,"nodeType":"133","endLine":11,"endColumn":117},{"ruleId":"120","severity":1,"message":"143","line":18,"column":5,"nodeType":"122","messageId":"123","endLine":18,"endColumn":19},{"ruleId":"120","severity":1,"message":"135","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":13},{"ruleId":"120","severity":1,"message":"135","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":13},{"ruleId":"131","severity":1,"message":"132","line":5,"column":11,"nodeType":"133","endLine":5,"endColumn":60},"@typescript-eslint/no-unused-vars","'MapDispatchToPropsType' is defined but never used.","Identifier","unusedVar","'Header' is defined but never used.","'Profile' is defined but never used.","'type' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'classes' is defined but never used.","'React' is defined but never used.","no-native-reassign",["144"],"no-negated-in-lhs",["145"],["144"],["145"],"'logoutTC' is defined but never used.","'newPostElement' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]