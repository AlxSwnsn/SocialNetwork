[{"C:\\incubator\\social\\src\\components\\profile\\ProfileContainer.tsx":"1","C:\\incubator\\social\\src\\HOC\\AuthRedirect.tsx":"2","C:\\incubator\\social\\src\\components\\dialogs\\DialogsContainer.tsx":"3","C:\\incubator\\social\\src\\components\\users\\UsersContainer.tsx":"4","C:\\incubator\\social\\src\\App.tsx":"5","C:\\incubator\\social\\src\\Redux\\AuthReducer.tsx":"6","C:\\incubator\\social\\src\\Redux\\ProfileReducer.tsx":"7","C:\\incubator\\social\\src\\Redux\\UsersReducer.tsx":"8","C:\\incubator\\social\\src\\Redux\\DialogsReducer.tsx":"9","C:\\incubator\\social\\src\\components\\dialogs\\Dialogs.tsx":"10","C:\\incubator\\social\\src\\components\\profile\\profileInfo\\ProfileInfo.tsx":"11","C:\\incubator\\social\\src\\components\\profile\\profileInfo\\ProfileStatus.tsx":"12","C:\\incubator\\social\\src\\API\\API.tsx":"13","C:\\incubator\\social\\src\\Redux\\SidebarReducer.tsx":"14"},{"size":1803,"mtime":1628117614267,"results":"15","hashOfConfig":"16"},{"size":854,"mtime":1626192071573,"results":"17","hashOfConfig":"16"},{"size":869,"mtime":1626186735836,"results":"18","hashOfConfig":"16"},{"size":3011,"mtime":1626192819425,"results":"19","hashOfConfig":"16"},{"size":1604,"mtime":1626190179910,"results":"20","hashOfConfig":"16"},{"size":1257,"mtime":1626124487247,"results":"21","hashOfConfig":"16"},{"size":3168,"mtime":1628113579667,"results":"22","hashOfConfig":"16"},{"size":5624,"mtime":1626106103565,"results":"23","hashOfConfig":"16"},{"size":1628,"mtime":1617128420219,"results":"24","hashOfConfig":"16"},{"size":1730,"mtime":1626192865166,"results":"25","hashOfConfig":"16"},{"size":910,"mtime":1628117345855,"results":"26","hashOfConfig":"16"},{"size":1620,"mtime":1628547487957,"results":"27","hashOfConfig":"16"},{"size":1112,"mtime":1628114000643,"results":"28","hashOfConfig":"16"},{"size":199,"mtime":1616158354616,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rl23lm",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\incubator\\social\\src\\components\\profile\\ProfileContainer.tsx",[],"C:\\incubator\\social\\src\\HOC\\AuthRedirect.tsx",[],"C:\\incubator\\social\\src\\components\\dialogs\\DialogsContainer.tsx",["59"],"C:\\incubator\\social\\src\\components\\users\\UsersContainer.tsx",["60"],"C:\\incubator\\social\\src\\App.tsx",["61","62"],"C:\\incubator\\social\\src\\Redux\\AuthReducer.tsx",["63"],"C:\\incubator\\social\\src\\Redux\\ProfileReducer.tsx",[],"C:\\incubator\\social\\src\\Redux\\UsersReducer.tsx",["64"],"import {usersAPI} from \"../API/API\";\r\nimport {ThunkDispatch} from \"redux-thunk\";\r\nimport {AppStateType} from \"./ReduxStore\";\r\n\r\nexport const FOLLOW = \"FOLLOW\"\r\nexport const UNFOLLOW = \"UNFOLLOW\"\r\nexport const SET_USERS = \"SET_USERS\"\r\nexport const SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\"\r\nexport const SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\"\r\nexport const TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\"\r\nexport const TOGGLE_IS_FOLLOWING_PROGRESS = \"TOGGLE_IS_FOLLOWING_PROGRESS\"\r\n\r\nexport type UserType = {\r\n    name: string\r\n    id: number\r\n    uniqueUrlName: null | string\r\n    photos: {\r\n        small: null | string\r\n        large: null | string\r\n    },\r\n    status: null | string\r\n    followed: boolean\r\n}\r\n\r\ntype InitialType = {\r\n    users: Array<UserType>\r\n    pageSize: number\r\n    totalUsersCount: number\r\n    currentPage: number\r\n    isFetching: boolean\r\n    followingProgress: Array<number>\r\n}\r\n\r\nlet initialState: InitialType = {\r\n    users: [],\r\n    pageSize: 5,\r\n    totalUsersCount: 0,\r\n    currentPage: 4,\r\n    isFetching: true,\r\n    followingProgress: []\r\n}\r\n\r\nexport const UsersReducer = (state = initialState, action: usersActionTypes): InitialType => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: true}\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userID) {\r\n                        return {...u, followed: false}\r\n                    } else {\r\n                        return u\r\n                    }\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return {\r\n                ...state, totalUsersCount: action.totalUsersCount\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingProgress: action.value\r\n                    ? [...state.followingProgress, action.userID]\r\n                    : state.followingProgress.filter(id => id != action.userID)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userID: number) => ({type: FOLLOW, userID} as const)\r\nexport const unfollowSuccess = (userID: number) => ({type: UNFOLLOW, userID} as const)\r\nexport const setUsers = (users: Array<UserType>) => ({type: SET_USERS, users} as const)\r\nexport const setCurrentPage = (currentPage: number) => ({type: SET_CURRENT_PAGE, currentPage} as const)\r\nexport const setTotalUsersCount = (totalUsersCount: number) => ({\r\n    type: SET_TOTAL_USERS_COUNT,\r\n    totalUsersCount\r\n} as const)\r\nexport const toggleIsFetching = (isFetching: boolean) => ({type: TOGGLE_IS_FETCHING, isFetching} as const)\r\nexport const toggleIsFollowingProgress = (value: boolean, userID: number) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    value, userID\r\n} as const)\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number) => {\r\n    return (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true))\r\n        usersAPI.getUsers(currentPage, pageSize).then(data => {\r\n            dispatch(setUsers(data.items))\r\n            dispatch(setTotalUsersCount(data.totalCount))\r\n            dispatch(toggleIsFetching(false))\r\n        })\r\n    }\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, usersActionTypes>) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n\r\n            })\r\n    }\r\n}\r\nexport const unfollow = (userId: number) => {\r\n    return (dispatch: ThunkDispatch<AppStateType, unknown, usersActionTypes>) => {\r\n        dispatch(toggleIsFollowingProgress(true, userId))\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId))\r\n                }\r\n                dispatch(toggleIsFollowingProgress(false, userId))\r\n\r\n            })\r\n    }\r\n}\r\n\r\ntype  followActionType = ReturnType<typeof followSuccess>\r\ntype  unfollowActionType = ReturnType<typeof unfollowSuccess>\r\ntype  setUsersActionType = ReturnType<typeof setUsers>\r\ntype setCurrentPageActionType = ReturnType<typeof setCurrentPage>\r\ntype setTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\r\ntype toggleIsFetchingActionType = ReturnType<typeof toggleIsFetching>\r\ntype toggleIsFollowingProgressActionType = ReturnType<typeof toggleIsFollowingProgress>\r\n\r\n\r\ntype usersActionTypes =\r\n    followActionType\r\n    | unfollowActionType\r\n    | setUsersActionType\r\n    | setCurrentPageActionType\r\n    | setTotalUsersCountActionType\r\n    | toggleIsFetchingActionType\r\n    | toggleIsFollowingProgressActionType","C:\\incubator\\social\\src\\Redux\\DialogsReducer.tsx",[],"C:\\incubator\\social\\src\\components\\dialogs\\Dialogs.tsx",[],"C:\\incubator\\social\\src\\components\\profile\\profileInfo\\ProfileInfo.tsx",[],"C:\\incubator\\social\\src\\components\\profile\\profileInfo\\ProfileStatus.tsx",["65"],"C:\\incubator\\social\\src\\API\\API.tsx",[],"C:\\incubator\\social\\src\\Redux\\SidebarReducer.tsx",["66"],{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"71","line":26,"column":6,"nodeType":"69","messageId":"70","endLine":26,"endColumn":28},{"ruleId":"67","severity":1,"message":"72","line":3,"column":8,"nodeType":"69","messageId":"70","endLine":3,"endColumn":14},{"ruleId":"67","severity":1,"message":"73","line":5,"column":8,"nodeType":"69","messageId":"70","endLine":5,"endColumn":15},{"ruleId":"67","severity":1,"message":"74","line":1,"column":9,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":91,"column":63,"nodeType":"77","messageId":"78","endLine":91,"endColumn":65},{"ruleId":"67","severity":1,"message":"79","line":2,"column":8,"nodeType":"69","messageId":"70","endLine":2,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":1,"column":8,"nodeType":"69","messageId":"70","endLine":1,"endColumn":13},"@typescript-eslint/no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","'MapDispatchToPropsType' is defined but never used.","'Header' is defined but never used.","'Profile' is defined but never used.","'type' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'classes' is defined but never used."]